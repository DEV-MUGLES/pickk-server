# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Courier {
  code: String!
  createdAt: DateTime!
  id: Int!
  issue: CourierIssue
  name: String!
  phoneNumber: String!
  returnReserveUrl: String!
  updatedAt: DateTime!
}

type CourierIssue {
  endAt: DateTime!
  message: String!
}

input CreateCourierInput {
  code: String!
  name: String!
  phoneNumber: String!
  returnReserveUrl: String!
}

input CreateShippingAddressInput {
  baseAddress: String!
  detailAddress: String!
  isPrimary: Boolean!
  name: String!
  phoneNumber1: String!
  phoneNumber2: String
  postalCode: String!
  receiverName: String!
}

input CreateUserInput {
  code: String
  email: String!
  height: Int
  name: String!
  password: String!
  weight: Int
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type JwtPayload {
  code: String
  exp: Timestamp!
  iat: Timestamp!
  sub: Int!
  username: String!
}

type JwtToken {
  access: String!
  refresh: String!
}

input LoginByCodeInput {
  code: String
  password: String!
}

input LoginByEmailInput {
  email: String!
  password: String!
}

type Mutation {
  addMyShippingAddress(createShippingAddressInput: CreateShippingAddressInput!): [ShippingAddress!]!
  createCourier(createCourierInput: CreateCourierInput!): Courier!
  createUser(createUserInput: CreateUserInput!): User!
  removeCourierIssue(courierId: Int!): Courier!
  removeMyShippingAddress(addressId: Int!): [ShippingAddress!]!
  updateCourier(id: Int!, updateCourierInput: UpdateCourierInput!): Courier!
  updateCourierIssue(courierId: Int!, updateCourierIssueInput: UpdateCourierIssueInput!): CourierIssue!
  updateMe(updateUserInput: UpdateUserInput!): User!
  updateMyPassword(newPassword: String!, oldPassword: String!): User!
  updateMyShippingAddress(addressId: Int!, updateShippingAddressInput: UpdateShippingAddressInput!): ShippingAddress!
}

type Query {
  courier(id: Int!): Courier!
  couriers: [Courier!]!
  loginByCode(loginByCodeInput: LoginByCodeInput!): JwtToken!
  loginByEmail(loginByEmailInput: LoginByEmailInput!): JwtToken!
  me: User!

  """Bearer token을 받아 JwtPayload를 반환합니다."""
  myJwtPayload: JwtPayload!
  myShippingAddress(id: Int!): ShippingAddress!
  myShippingAddresses: [ShippingAddress!]!

  """refresh token을 받아서 새로운 JwtToken을 생성합니다."""
  refreshJwtToken: JwtToken!
  user(id: Int!): User!
  users: [User!]!
}

type ShippingAddress {
  baseAddress: String!
  createdAt: DateTime!
  detailAddress: String!
  id: Int!
  isPrimary: Boolean!
  name: String!
  phoneNumber1: String!
  phoneNumber2: String
  postalCode: String!
  receiverName: String!
  updatedAt: DateTime!
  userId: Int!
}

"""
Date type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

input UpdateCourierInput {
  code: String
  name: String
  phoneNumber: String
  returnReserveUrl: String
}

input UpdateCourierIssueInput {
  endAt: DateTime!
  message: String!
}

input UpdateShippingAddressInput {
  baseAddress: String
  detailAddress: String
  isPrimary: Boolean
  name: String
  phoneNumber1: String
  phoneNumber2: String
  postalCode: String
  receiverName: String
  userId: Int
}

input UpdateUserInput {
  code: String
  email: String
  height: Int
  name: String
  weight: Int
}

type User {
  code: String
  createdAt: DateTime!
  email: String!
  height: Int
  id: Int!
  name: String!
  role: UserRole
  shippingAddresses: [ShippingAddress!]
  updatedAt: DateTime!
  weight: Int
}

"""유저의 역할/권한을 나타냅니다. User->Editor->Seller->Admin 순으로 계층 구조입니다."""
enum UserRole {
  Admin
  Editor
  Seller
  User
}
