version: '3.7'

services:
  mysql:
    container_name: mysql
    image: mysql:5.7
    command:
      [
        'mysqld',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci',
      ]
    networks:
      - webnet
    environment:
      ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: ok
    ports:
      - '${MYSQL_PORT}:${MYSQL_PORT}'
    volumes:
      - mysql-data:/var/lib/mysql
  redis:
    container_name: redis
    image: redis:5
    networks:
      - webnet
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    ports:
      - '${LOCALSTACK_PORT}:${LOCALSTACK_PORT}'
    environment:
      - SERVICES=sqs
      - DEBUG=1
      - EDGE_PORT=${LOCALSTACK_PORT}
      - DEFAULT_REGION=${LOCALSTACK_REGION}
      - S3_PUBLIC_BUCKET_NAME=${AWS_S3_PUBLIC_BUCKET_NAME}
      - ACCESS_KEY_ID=${LOCALSTACK_ACCESS_KEY_ID}
      - SECRET_ACCESS_KEY=${LOCAKSTACK_SECRET_ACCESS_KEY}
    volumes:
      - '${LOCALSTACK_TMPDIR:-/tmp/localstack}:/tmp/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '${PWD}/scripts/init-localstack.sh:/docker-entrypoint-initaws.d/init-localstack.sh'
    networks:
      - webnet
  es01:
    container_name: es01
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    ports:
      - '${ELASTICSEARCH_PORT}:${ELASTICSEARCH_PORT}'
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    networks:
      - elastic
  es02:
    container_name: es02
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic
  es03:
    container_name: es03
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic
networks:
  webnet:
  elastic:
    driver: bridge
volumes:
  mysql-data:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
