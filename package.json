{
  "name": "pickk-server",
  "version": "0.0.30",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "dev": "cp .env.dev .env && docker-compose -f docker-compose.yml up",
    "dev:down": "docker-compose -f docker-compose.yml down -v && docker system prune",
    "dev:build": "docker-compose -f docker-compose.yml up --build -V",
    "test:init": "docker-compose -f docker-compose.test.yml down && ./scripts/init-test.sh",
    "preinstall": "npm list ts-node -g || npm install ts-node -g",
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "tsc": "tsc --noEmit",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "jest": "jest",
    "jest:watch": "jest --watch",
    "jest:cov": "jest --coverage",
    "jest:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "jest:e2e": "jest --config ./test/jest-e2e.json",
    "test": "npm run format && npm run lint && npm run tsc && npm run jest",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/.bin/typeorm",
    "makemigrations": "npm run typeorm migration:generate --",
    "migrate": "npm run typeorm migration:run",
    "migrate:revert": "npm run typeorm migration:revert",
    "migrations": "npm run typeorm migration:show"
  },
  "dependencies": {
    "@admin-bro/express": "^3.1.0",
    "@admin-bro/nestjs": "^1.1.0",
    "@admin-bro/typeorm": "^1.4.0",
    "@hapi/joi": "^17.1.1",
    "@nestjs/common": "^7.5.1",
    "@nestjs/config": "^0.6.3",
    "@nestjs/core": "^7.5.1",
    "@nestjs/graphql": "^7.9.11",
    "@nestjs/jwt": "^7.2.0",
    "@nestjs/passport": "^7.1.5",
    "@nestjs/platform-express": "^7.5.1",
    "@nestjs/swagger": "^4.7.15",
    "@nestjs/typeorm": "^7.1.5",
    "admin-bro": "^3.4.0",
    "apollo-server-express": "^2.21.0",
    "aws-sdk": "^2.869.0",
    "axios": "^0.21.1",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.4.0",
    "class-validator": "^0.13.1",
    "dayjs": "^1.10.4",
    "express": "^4.17.1",
    "express-formidable": "^1.2.0",
    "express-session": "^1.17.1",
    "graphql": "^15.5.0",
    "graphql-parse-resolve-info": "^4.11.0",
    "graphql-tools": "^7.0.4",
    "mysql": "^2.18.1",
    "passport": "^0.4.1",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^6.6.3",
    "typeorm": "^0.2.31"
  },
  "devDependencies": {
    "@commitlint/cli": "^12.1.1",
    "@commitlint/config-conventional": "^12.1.1",
    "@nestjs/cli": "^7.5.1",
    "@nestjs/schematics": "^7.1.3",
    "@nestjs/testing": "^7.5.1",
    "@types/aws-sdk": "^2.7.0",
    "@types/axios": "^0.14.0",
    "@types/bcryptjs": "^2.4.2",
    "@types/express": "^4.17.8",
    "@types/faker": "^5.5.3",
    "@types/hapi__joi": "^17.1.6",
    "@types/jest": "^26.0.15",
    "@types/node": "^14.14.6",
    "@types/passport-jwt": "^3.0.5",
    "@types/passport-local": "^1.0.33",
    "@types/supertest": "^2.0.10",
    "@typescript-eslint/eslint-plugin": "^4.6.1",
    "@typescript-eslint/parser": "^4.6.1",
    "eslint": "^7.12.1",
    "eslint-config-prettier": "7.2.0",
    "eslint-plugin-prettier": "^3.1.4",
    "faker": "^5.5.3",
    "jest": "^26.6.3",
    "prettier": "^2.1.2",
    "rimraf": "^3.0.2",
    "supertest": "^6.0.0",
    "ts-jest": "^26.4.3",
    "ts-loader": "^8.0.8",
    "ts-node": "^9.0.0",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^4.0.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "@src/(.*)$": "<rootDir>/$1",
      "@item/(.*)$": "<rootDir>/modules/item/$1",
      "@my/(.*)$": "<rootDir>/modules/my/$1",
      "@user/(.*)$": "<rootDir>/modules/user/$1"
    }
  },
  "commitlint": {
    "rules": {
      "type-enum": [
        2,
        "always",
        [
          "feat",
          "fix",
          "enhance",
          "refactor",
          "perf",
          "test",
          "build",
          "chore",
          "ci",
          "docs",
          "revert",
          "style"
        ]
      ]
    }
  }
}
